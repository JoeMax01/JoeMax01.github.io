<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小罗的网站</title>
  
  
  <link href="http://xiaoluostudy.top/atom.xml" rel="self"/>
  
  <link href="http://xiaoluostudy.top/"/>
  <updated>2022-06-15T17:42:47.231Z</updated>
  <id>http://xiaoluostudy.top/</id>
  
  <author>
    <name>小罗</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>QT缺少python27.dll修复办法</title>
    <link href="http://xiaoluostudy.top/posts/7271e5d8.html"/>
    <id>http://xiaoluostudy.top/posts/7271e5d8.html</id>
    <published>2022-04-10T04:16:56.000Z</published>
    <updated>2022-06-15T17:42:47.231Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/posts/7271e5d8/qt_python27_missing%5Cimage-20220410121933509.png" alt="image-20220410121933509" loading="lazy"></p><p>点开QT时出现上述问题，一种方法就是找python27.dll文件进行替换。</p><p>1.进入网站下载相关文件  <a href="https://windll.com/dll/python-software-foundation/python27">https://windll.com/dll/python-software-foundation/python27</a></p><p><img src="/posts/7271e5d8/qt_python27_missing%5Cimage-20220410122232691.png" alt="image-20220410122232691" loading="lazy"></p><p>2.之后将文件移动到下面的路径里，C:\Windows\SysWOW64\</p><p>3.<em>然后重启</em>软件或电脑</p><p>试了4种方案，把32位放在System32和SysWOW64，只有放在sysWOW64可以解决问题，同样64位放在System32和SysWOW64都不能解决问题</p><p>不想在网站找，可以链接直接下载：</p><p><a href="https://download.csdn.net/download/qq_31721897/85104258">https://download.csdn.net/download/qq_31721897/85104258</a></p><blockquote><p><a href="https://windll.com/">https://windll.com/</a> 这个网站可以找到其他的dll，如果你有其他dll缺失，里面应该都能找到</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/posts/7271e5d8/qt_python27_missing%5Cimage-20220410121933509.png&quot; alt=&quot;image-20220410121933509&quot; loading=&quot;lazy&quot;&gt;&lt;/p&gt;
&lt;p&gt;点开QT时出现</summary>
      
    
    
    
    <category term="教程" scheme="http://xiaoluostudy.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="QT" scheme="http://xiaoluostudy.top/tags/QT/"/>
    
  </entry>
  
  <entry>
    <title>jsDelivr使用，免费提供CDN加速服务</title>
    <link href="http://xiaoluostudy.top/posts/de076821.html"/>
    <id>http://xiaoluostudy.top/posts/de076821.html</id>
    <published>2021-07-12T15:08:09.000Z</published>
    <updated>2022-06-15T17:31:55.874Z</updated>
    
    <content type="html"><![CDATA[<p>利用jsDelivr为开发者提供免费公共 CDN 加速服务<br>还可以当成文件下载工具</p><span id="more"></span><blockquote><p>用jsdelivr建立CDN有两种方式，一种是npm，一种是GitHub</p><p>推荐使用npm，下载更快些。</p></blockquote><p><strong>使用npm需要安装nodejs</strong></p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><blockquote><p>进入npm官网  <a href="https://www.npmjs.com/">https://www.npmjs.com/</a>  注册账号</p></blockquote><h1 id="登录npm"><a href="#登录npm" class="headerlink" title="登录npm"></a>登录npm</h1><blockquote><p>打开<code>CMD（管理员模式）</code>或者<code>Git</code>输入</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> login<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/posts/de076821/jsDelivr-Using%5C20210712232610.png" alt="20210712232610" loading="lazy"></p><blockquote><p>创建一个文件夹放自己要打包上传的东西,文件夹名字与下面package.json里的name一样</p></blockquote><h1 id="初始化包"><a href="#初始化包" class="headerlink" title="初始化包"></a>初始化包</h1><p>用CMD或Git输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> F:<span class="token punctuation">\</span>GithubProjects<span class="token punctuation">\</span>test   <span class="token comment">#我的是放在这边</span><span class="token function">npm</span> init<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://gitee.com/JoeMax/my-stm32-picture-resource/raw/master/img/20210712232944.png" alt="image-20210712232944085" loading="lazy"></p><blockquote><p>一路回车后进入打包文件夹里的package.json</p><p>修改name这一项，不能和现有的重名,可以用你自己设置的名字在npm官网搜索一下</p></blockquote><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"testttt0001"</span><span class="token punctuation">,</span>   #包名  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>#版本  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>#描述  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"index.js"</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>#作者  <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p> 文件夹里新建两个文件,index.js 和 README.md，不一定要</p><p>index.js文件就是你要导出的内容</p><p>README.md就是一个包的介绍</p></blockquote><h1 id="发布包"><a href="#发布包" class="headerlink" title="发布包"></a>发布包</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> publish testttt0001<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>每次发布都要更改package.json里的version</strong></p><h1 id="下载包"><a href="#下载包" class="headerlink" title="下载包"></a>下载包</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> insatll testtttt0001<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="以下是官方介绍"><a href="#以下是官方介绍" class="headerlink" title="以下是官方介绍"></a>以下是官方介绍</h1><h2 id="npm-CDN"><a href="#npm-CDN" class="headerlink" title="npm CDN"></a>npm CDN</h2><p>加载npm上托管的任何项目</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>npm<span class="token operator">/</span><span class="token keyword">package</span>@version<span class="token operator">/</span>file<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>加载文件的确切版本</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>npm<span class="token operator">/</span>jquery@<span class="token number">3.2</span><span class="token number">.1</span><span class="token operator">/</span>dist<span class="token operator">/</span>jquery<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>例如</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>npm<span class="token operator">/</span>live2d<span class="token operator">-</span>widget<span class="token operator">-</span>model<span class="token operator">-</span>wanko@<span class="token number">1.0</span><span class="token number">.5</span><span class="token operator">/</span>assets<span class="token operator">/</span>wanko<span class="token punctuation">.</span>model<span class="token punctuation">.</span>json<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用版本范围而不是确切版本</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>npm<span class="token operator">/</span>jquery@<span class="token number">3</span><span class="token operator">/</span>dist<span class="token operator">/</span>jquery<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>npm<span class="token operator">/</span>jquery@<span class="token number">3.1</span><span class="token operator">/</span>dist<span class="token operator">/</span>jquery<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果您使用此功能，并且您所请求的文件在最新版本的软件包中不可用，则由于jsdelivr的版本回退功能，该链接将继续工作。jsdelivr将继续从旧版本的软件包中提供该文件，而不是因为404错误而失败。<br>按标签加载（不建议用于生产用途）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>npm<span class="token operator">/</span>jquery@beta<span class="token operator">/</span>dist<span class="token operator">/</span>jquery<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>完全省略版本或使用“latest”加载最新版本（不推荐用于生产用途）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>npm<span class="token operator">/</span>jquery@latest<span class="token operator">/</span>dist<span class="token operator">/</span>jquery<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>npm<span class="token operator">/</span>jquery<span class="token operator">/</span>dist<span class="token operator">/</span>jquery<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>请求最新版本</p><p>（而不是“最新专业版”或“最新版本”）是危险的，因为主要版本通常会带来重大变化。只有你真的知道自己在做什么才这样做。</p><p>将“.min”添加到任何JS &#x2F; CSS文件以获得缩小版本 – 如果不存在，jsdelivr将为您生成它。所有生成的文件都带有源映射，可以在开发过程中轻松使用：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>npm<span class="token operator">/</span>github<span class="token operator">-</span>markdown<span class="token operator">-</span>css@<span class="token number">2.4</span><span class="token number">.1</span><span class="token operator">/</span>github<span class="token operator">-</span>markdown<span class="token punctuation">.</span>min<span class="token punctuation">.</span>css<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>缩小大文件可能需要几秒钟。但是，jsdelivr将所有生成的文件存储在永久存储中，因此此延迟仅适用于前几个请求。<br>省略文件路径以获取默认文件（目前不推荐）。此文件始终缩小：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>npm<span class="token operator">/</span>jquery@<span class="token number">3.2</span><span class="token number">.1</span><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>npm<span class="token operator">/</span>jquery@<span class="token number">3</span><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>npm<span class="token operator">/</span>jquery<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果默认文件不直接位于程序包的根目录中，则使用此功能可能会导致相对导入出现问题，例如源映射，图像或请求的文件引用的字体文件。<br>获取目录列表</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>npm<span class="token operator">/</span>jquery@<span class="token number">3.2</span><span class="token number">.1</span><span class="token operator">/</span><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>npm<span class="token operator">/</span>jquery@<span class="token number">3.2</span><span class="token number">.1</span><span class="token operator">/</span>dist<span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="GitHub-CDN"><a href="#GitHub-CDN" class="headerlink" title="GitHub CDN"></a>GitHub CDN</h2><p>建议将npm用于支持更好用户体验的项目 – 在jsdelivr网站上可以搜索npm包，并且包页面显示其他有用信息，例如描述和主页链接。<br>jsdelivr使用永久S3存储来确保所有文件仍然可用，即使GitHub发生故障，或者作者删除了存储库或版本。仅在第一次直接从GitHub获取文件，或者当S3关闭时。<br>加载任何GitHub版本，提交或分支：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span>user<span class="token operator">/</span>repo@version<span class="token operator">/</span>file<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>加载文件的确切版本</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span>jquery<span class="token operator">/</span>jquery@<span class="token number">3.2</span><span class="token number">.1</span><span class="token operator">/</span>dist<span class="token operator">/</span>jquery<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span>jquery<span class="token operator">/</span>jquery@32b00373b3f42e5cdcb709df53f3b08b7184a944<span class="token operator">/</span>dist<span class="token operator">/</span>jquery<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>使用版本范围而不是确切版本</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span>jquery<span class="token operator">/</span>jquery@<span class="token number">3.2</span><span class="token operator">/</span>dist<span class="token operator">/</span>jquery<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span>jquery<span class="token operator">/</span>jquery@<span class="token number">3</span><span class="token operator">/</span>dist<span class="token operator">/</span>jquery<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果您使用此功能，并且最新版本中未提供您请求的文件，则由于jsdelivr的版本回退功能，该链接将继续有效。jsdelivr将继续从旧版本提供该文件，而不是因为404错误而失败。<br>完全省略版本或使用“latest”加载最新版本（不推荐用于生产用途）：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span>jquery<span class="token operator">/</span>jquery@latest<span class="token operator">/</span>dist<span class="token operator">/</span>jquery<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span>jquery<span class="token operator">/</span>jquery<span class="token operator">/</span>dist<span class="token operator">/</span>jquery<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>请求最新版本（而不是“最新专业版”或“最新版本”）是危险的，因为主要版本通常会带来重大变化。只有你真的知道自己在做什么才这样做。<br>将“.min”添加到任何JS &#x2F; CSS文件以获得缩小版本 – 如果不存在，我们将为您生成它。所有生成的文件都带有源映射，可以在开发过程中轻松使用：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span>jquery<span class="token operator">/</span>jquery@<span class="token number">3.2</span><span class="token number">.1</span><span class="token operator">/</span>src<span class="token operator">/</span>core<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>缩小大文件可能需要几秒钟。但是，jsdelivr将所有生成的文件存储在永久存储中，因此此延迟仅适用于前几个请求。<br>获取目录列表</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span>jquery<span class="token operator">/</span>jquery@<span class="token number">3.2</span><span class="token number">.1</span><span class="token operator">/</span><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span>jquery<span class="token operator">/</span>jquery@<span class="token number">3.2</span><span class="token number">.1</span><span class="token operator">/</span>dist<span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>合并多个文件</p><p>jsdelivr的组合端点允许您在一个请求中从npm和GitHub端点加载多个文件：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>combine<span class="token operator">/</span>url1<span class="token punctuation">,</span>url2<span class="token punctuation">,</span>url3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>适用于单个文件的所有功能（版本范围，缩小等）也适用于此处。所有组合文件都带有源映射，可以在开发过程中轻松使用。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>combine<span class="token operator">/</span>gh<span class="token operator">/</span>jquery<span class="token operator">/</span>jquery@<span class="token number">3.2</span><span class="token operator">/</span>dist<span class="token operator">/</span>jquery<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span class="token punctuation">,</span>gh<span class="token operator">/</span>twbs<span class="token operator">/</span>bootstrap@<span class="token number">3.3</span><span class="token operator">/</span>dist<span class="token operator">/</span>js<span class="token operator">/</span>bootstrap<span class="token punctuation">.</span>min<span class="token punctuation">.</span>js<span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>combine<span class="token operator">/</span>npm<span class="token operator">/</span>bootstrap@<span class="token number">3.3</span><span class="token operator">/</span>dist<span class="token operator">/</span>css<span class="token operator">/</span>bootstrap<span class="token punctuation">.</span>min<span class="token punctuation">.</span>css<span class="token punctuation">,</span>npm<span class="token operator">/</span>bootstrap@<span class="token number">3.3</span><span class="token operator">/</span>dist<span class="token operator">/</span>css<span class="token operator">/</span>bootstrap<span class="token operator">-</span>theme<span class="token punctuation">.</span>min<span class="token punctuation">.</span>css<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>组合大&#x2F;多个文件可能需要几秒钟。但是，jsdelivr将所有生成的文件存储在永久存储中，因此此延迟仅适用于前几个请求。</p><h2 id="WordPress-CDN"><a href="#WordPress-CDN" class="headerlink" title="WordPress CDN"></a>WordPress CDN</h2><p>从WordPress.org插件SVN repo加载任何插件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>wp<span class="token operator">/</span>plugins<span class="token operator">/</span>project<span class="token operator">/</span>tags<span class="token operator">/</span>version<span class="token operator">/</span>file<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>加载文件的确切版本</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>wp<span class="token operator">/</span>plugins<span class="token operator">/</span>wp<span class="token operator">-</span>slimstat<span class="token operator">/</span>tags<span class="token operator">/</span><span class="token number">4.6</span><span class="token number">.5</span><span class="token operator">/</span>wp<span class="token operator">-</span>slimstat<span class="token punctuation">.</span>js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>加载最新版本（不建议用于生产用途）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>wp<span class="token operator">/</span>plugins<span class="token operator">/</span>wp<span class="token operator">-</span>slimstat<span class="token operator">/</span>trunk<span class="token operator">/</span>wp<span class="token operator">-</span>slimstat<span class="token punctuation">.</span>js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>请求最新版本是危险的，因为新版本可能会带来重大变化。只有你真的知道自己在做什么才这样做。<br>从WordPress.org主题SVN repo加载任何主题</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>wp<span class="token operator">/</span>themes<span class="token operator">/</span>project<span class="token operator">/</span>version<span class="token operator">/</span>file<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>加载文件的确切版本</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token literal-property property">https</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>wp<span class="token operator">/</span>themes<span class="token operator">/</span>twenty<span class="token operator">-</span>eightteen<span class="token operator">/</span><span class="token number">1.7</span><span class="token operator">/</span>assets<span class="token operator">/</span>js<span class="token operator">/</span>html5<span class="token punctuation">.</span>js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;利用jsDelivr为开发者提供免费公共 CDN 加速服务&lt;br&gt;还可以当成文件下载工具&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="http://xiaoluostudy.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="jsDelivr" scheme="http://xiaoluostudy.top/tags/jsDelivr/"/>
    
    <category term="CDN" scheme="http://xiaoluostudy.top/tags/CDN/"/>
    
  </entry>
  
  <entry>
    <title>美化你的博客文章</title>
    <link href="http://xiaoluostudy.top/posts/32e64cde.html"/>
    <id>http://xiaoluostudy.top/posts/32e64cde.html</id>
    <published>2021-07-12T13:20:41.000Z</published>
    <updated>2022-06-15T17:30:28.383Z</updated>
    
    <content type="html"><![CDATA[<p>如何让自己编写的Blog更生动更好看( •̀ ω •́ )✧</p><span id="more"></span><h1 id="文章样式"><a href="#文章样式" class="headerlink" title="文章样式"></a>文章样式</h1><h2 id="多彩引用标签"><a href="#多彩引用标签" class="headerlink" title="多彩引用标签"></a>多彩引用标签</h2><p><img src="/posts/32e64cde/Hexo-Using%5C20210527232523.png" alt="20210527232523" loading="lazy"></p><pre class="line-numbers language-html" data-language="html"><code class="language-html">> Primary<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>> Success<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>> Warning<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>> Danger<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>> Info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h2><details>  <summary>这是折叠案例</summary>  这是内容</details><pre class="line-numbers language-none"><code class="language-none">&lt;details&gt;  &lt;summary&gt;Summary&lt;&#x2F;summary&gt;  Content&lt;&#x2F;details&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="加深背景"><a href="#加深背景" class="headerlink" title="加深背景"></a>加深背景</h2><p><code>type</code> </p><pre class="line-numbers language-none"><code class="language-none">&#96;type&#96; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="修改设置效果生成"><a href="#修改设置效果生成" class="headerlink" title="修改设置效果生成"></a>修改设置效果生成</h2><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">cd themes&#x2F;yungit pull<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="文章内跳转"><a href="#文章内跳转" class="headerlink" title="文章内跳转"></a>文章内跳转</h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jump2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#00ffff</span><span class="token punctuation">></span></span>2即标题1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2级标题1正文<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>[点击跳转到](#test2)[点击跳转到底部](#jump)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tset2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4级标题2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jump<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4级标题2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>[点击跳转到2级标题1正文](#test1)[跳转到2级标题1](#jump2)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="卡片样式"><a href="#卡片样式" class="headerlink" title="卡片样式"></a>卡片样式</h1><h3 id="内容卡片"><a href="#内容卡片" class="headerlink" title="内容卡片"></a>内容卡片</h3><ul><li><code>opacity</code>: 自定义展示的文章卡片透明度，默认为 <code>0.8</code></li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">post_card</span><span class="token punctuation">:</span>  <span class="token key atrule">opacity</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="type"><a href="#type" class="headerlink" title="# type"></a><a href="https://yun.yunyoujun.cn/guide/config.html#type">#</a> type</h4><p>为文章设置 <code>type</code> 属性，即可将其转为其他类型卡片，并跳转 <code>url</code> 设置的链接。</p><p>譬如：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">---title: xxxtype: bilibiliurl: https:&#x2F;&#x2F;www.bilibili.com&#x2F;video&#x2F;av8153395&#x2F;---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在文章标题前将会出现 bilibili 的图标，点击标题会跳转至对应的链接。</p><p>目前默认支持以下类型（哔哩哔哩、豆瓣、GitHub、网易云音乐、推特、微信公众号、微博、语雀、知乎、Notion、外链）：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">types</span><span class="token punctuation">:</span>  <span class="token key atrule">link</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> blue    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>external<span class="token punctuation">-</span>link<span class="token punctuation">-</span>line  <span class="token key atrule">bilibili</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#FF8EB3"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>bilibili<span class="token punctuation">-</span>line  <span class="token key atrule">douban</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#007722"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>douban<span class="token punctuation">-</span>line  <span class="token key atrule">github</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> black    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>github<span class="token punctuation">-</span>line  <span class="token key atrule">netease-cloud-music</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#C10D0C"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>netease<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>music<span class="token punctuation">-</span>line  <span class="token key atrule">notion</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> black    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>notion  <span class="token key atrule">twitter</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#1da1f2"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>twitter<span class="token punctuation">-</span>line  <span class="token key atrule">wechat</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#1AAD19"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>wechat<span class="token punctuation">-</span>2<span class="token punctuation">-</span>line  <span class="token key atrule">weibo</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#E6162D"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>weibo<span class="token punctuation">-</span>line  <span class="token key atrule">yuque</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#25b864"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>yuque  <span class="token key atrule">zhihu</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token string">"#0084FF"</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>zhihu<span class="token punctuation">-</span>line<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你也可以自己在 <code>yun.yml</code> 设置你跳转不同链接专属的图标和颜色。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">type</span><span class="token punctuation">:</span>  <span class="token key atrule">google</span><span class="token punctuation">:</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> xxx    <span class="token key atrule">icon</span><span class="token punctuation">:</span> xxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>当你指定的 <code>type</code> 不存在于默认支持中，也没有进行自定义，将默认使用蓝色的额外链接图标。</p><p>如果你想在你的外链卡片上显示一些信息，你可以写在 <code>&lt;!-- more --&gt;</code> 前，它会被当作摘要显示。</p><p>譬如：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">---title: hexo-theme-yuntype: githuburl: https:&#x2F;&#x2F;github.com&#x2F;YunYouJun&#x2F;hexo-theme-yun---Hexo 主题 Yun&lt;!-- more --&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="hide"><a href="#hide" class="headerlink" title="# hide"></a><a href="https://yun.yunyoujun.cn/guide/config.html#hide">#</a> hide</h4><p>你可以在文章头部添加 <code>hide</code> 属性，来临时隐藏某篇文章。</p><ul><li>&#96;&#96;&#96;<br>hide<pre class="line-numbers language-none"><code class="language-none">  :  - &#96;index&#96;: 设置为 &#96;index&#96; 时，将只在首页隐藏，归档中仍然展示。（譬如放一些没有必要放在首页的笔记，并在归档中方便自己查看。）  - &#96;true&#96;: 当设置为 &#96;true&#96; 时，该文章仍然会被渲染，你自己可以直接访问链接进行查看。但不会被显示在展示的文章卡片与归档中。&gt; 什么？你想完全不渲染不显示？那你为何不将其放在 &#96;_drafts&#96; 文件夹下，或干脆不提交这篇文章。&#96;&#96;&#96;yaml---title: xxxhide: true# hide: indexsitemap: falseindexing: false---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h4><p>表格</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">&#123;% tabs First unique name %&#125;&lt;!-- tab --&gt;**This is Tab 1.**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**This is Tab 2.**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**This is Tab 3.**&lt;!-- endtab --&gt;&#123;% endtabs %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="文章优先级设置"><a href="#文章优先级设置" class="headerlink" title="文章优先级设置"></a>文章优先级设置</h4><pre class="line-numbers language-none"><code class="language-none">置顶    确保你的 hexo-generator-index    (opens new window) 为 2.0.0 或以上通过设置文章 Front Matter 中 sticky 属性以进行置顶，数值越高，优先级越高。设置置顶后，文章卡片右上角将出现置顶图标。---title: xxxsticky: 100---你也可以通过设置权重来实现多篇置顶文章的顺序。---title: xxxsticky: 1------title: xxxsticky: 2---此时 sticky: 2 的文章将排列在 sticky: 1 的文章上面。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="打赏开关"><a href="#打赏开关" class="headerlink" title="打赏开关"></a>打赏开关</h2><p>您也可以在某篇文章的首部单独设置是否开启打赏。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">reward</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token comment"># reward: false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="文章播放器开关"><a href="#文章播放器开关" class="headerlink" title="文章播放器开关"></a>文章播放器开关</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> xxx<span class="token key atrule">aplayer</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h2><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p><pre class="line-numbers language-none"><code class="language-none">categories:- Diarytags:- PS3- Games<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>分类方法的分歧</p><p>如果您有过使用 WordPress 的经验，就很容易误解 Hexo 的分类方式。WordPress 支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是 Hexo 不支持指定多个同级分类。下面的指定方法：</p><pre class="line-numbers language-none"><code class="language-none">categories:  - Diary  - Life<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>会使分类<code>Life</code>成为<code>Diary</code>的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p><p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p><pre class="line-numbers language-none"><code class="language-none">categories:- [Diary, PlayStation]- [Diary, Games]- [Life]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>此时这篇文章同时包括三个分类： <code>PlayStation</code> 和 <code>Games</code> 分别都是父分类 <code>Diary</code> 的子分类，同时 <code>Life</code> 是一个没有子分类的分类。</p></blockquote><h1 id="编写文章Front-matter"><a href="#编写文章Front-matter" class="headerlink" title="编写文章Front-matter"></a>编写文章Front-matter</h1><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>layout</code></td><td>布局</td></tr><tr><td><code>title</code></td><td>标题</td></tr><tr><td><code>date</code></td><td>建立日期</td></tr><tr><td><code>updated</code></td><td>更新日期</td></tr><tr><td><code>comments</code></td><td>开启文章的评论功能</td></tr><tr><td><code>tags</code></td><td>标签（不适用于分页）</td></tr><tr><td><code>categories</code></td><td>分类（不适用于分页）</td></tr><tr><td><code>permalink</code></td><td>覆盖文章网址</td></tr></tbody></table><h2 id="生成新文章"><a href="#生成新文章" class="headerlink" title="生成新文章"></a>生成新文章</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c">hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">></span>   <span class="token comment">//layout默认是post    缩写hexo new paper</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>，它们分别对应不同的路径，而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p><table><thead><tr><th>布局</th><th>路径</th></tr></thead><tbody><tr><td><code>post</code></td><td><code>source/_posts</code></td></tr><tr><td><code>page</code></td><td><code>source</code></td></tr><tr><td><code>draft</code></td><td><code>source/_drafts</code></td></tr></tbody></table><h2 id="page"><a href="#page" class="headerlink" title="page"></a>page</h2><p>如果你想另起一页，那么可以使用</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">hexo new page board<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>系统会自动给你在source文件夹下创建一个board文件夹，以及board文件夹中的index.md，这样你访问的board对应的链接就是<a href="http://xxx.xxx/board">http://xxx.xxx/board</a></p><h2 id="draft"><a href="#draft" class="headerlink" title="draft"></a>draft</h2><p>draft是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以</p><pre><code>hexo new draft newpage</code></pre><p>这样会在source&#x2F;_draft中新建一个newpage.md文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</p><pre><code>hexo server --draft1</code></pre><p>在本地端口中开启服务预览。</p><p>如果你的草稿文件写完了，想要发表到post中，</p><pre><code>hexo publish draft newpage</code></pre><p>就会自动把newpage.md发送到post中。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;如何让自己编写的Blog更生动更好看( •̀ ω •́ )✧&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="http://xiaoluostudy.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="博客文章编辑" scheme="http://xiaoluostudy.top/tags/%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E7%BC%96%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>Arduino的学习</title>
    <link href="http://xiaoluostudy.top/posts/1022efac.html"/>
    <id>http://xiaoluostudy.top/posts/1022efac.html</id>
    <published>2021-07-12T12:52:21.000Z</published>
    <updated>2022-06-15T16:51:12.727Z</updated>
    
    <content type="html"><![CDATA[<p>最近粗错的学习了Arduino的使用ヾ(≧▽≦*)o</p><span id="more"></span><h1 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h1><blockquote><p><a href="https://www.arduino.cc/en/software">https://www.arduino.cc/en/software</a></p></blockquote><p>下载完后在工具中选择对应的开发板型号和端口</p><h1 id="添加其他的开发板"><a href="#添加其他的开发板" class="headerlink" title="添加其他的开发板"></a>添加其他的开发板</h1><p>这里使用esp8266mini d1开发板</p><blockquote><p>在文件-首选项-附加开发板管理器网址里填写  <a href="http://arduino.esp8266.com/stable/package_esp8266com_index.json">http://arduino.esp8266.com/stable/package_esp8266com_index.json</a></p></blockquote><blockquote><p>之后在工具-开发板-开发板管理器搜索esp8266安装</p></blockquote><p><img src="/posts/1022efac/20210712210412.png" loading="lazy"></p><p><img src="/posts/1022efac/20210712210607.png" alt="20210712210607" loading="lazy"></p><h1 id="初始文件讲解"><a href="#初始文件讲解" class="headerlink" title="初始文件讲解"></a>初始文件讲解</h1><pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">void setup() &#123;  &#x2F;&#x2F; 这里面放的是刚开机会运行的东西,比如串口通信频率&#125;void loop() &#123;  &#x2F;&#x2F; 这里放的函数将会一直循环,相当于while&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Arduino函数"><a href="#Arduino函数" class="headerlink" title="Arduino函数"></a>Arduino函数</h1><h2 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h2><pre class="line-numbers language-C" data-language="C"><code class="language-C">pinMode(LED_BUILTIN, OUTPUT)   &#x2F;&#x2F;定义输出引脚pinMode(LED_BUILTIN, INPUT)   &#x2F;&#x2F;定义输入引脚<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="引脚高低电平设定"><a href="#引脚高低电平设定" class="headerlink" title="引脚高低电平设定"></a>引脚高低电平设定</h2><pre class="line-numbers language-C" data-language="C"><code class="language-C">digitalWrite(LED_BUILTIN, LOW);  &#x2F;&#x2F;高低电平设置<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="引脚高低电平读取"><a href="#引脚高低电平读取" class="headerlink" title="引脚高低电平读取"></a>引脚高低电平读取</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token function">digtialRead</span><span class="token punctuation">(</span>pushButton<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//引脚电平读取  </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="延时函数"><a href="#延时函数" class="headerlink" title="延时函数"></a>延时函数</h2><pre class="line-numbers language-C" data-language="C"><code class="language-C">delay(1000);  &#x2F;&#x2F;延时1000ms<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="串口波特率设置"><a href="#串口波特率设置" class="headerlink" title="串口波特率设置"></a>串口波特率设置</h2><pre class="line-numbers language-C" data-language="C"><code class="language-C">Serial.begin(9600); &#x2F;&#x2F;波特率<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="串口信息输出"><a href="#串口信息输出" class="headerlink" title="串口信息输出"></a>串口信息输出</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c">Serial<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//输出字符串   没有格式化</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="PWM实现"><a href="#PWM实现" class="headerlink" title="PWM实现"></a>PWM实现</h2><pre class="line-numbers language-C" data-language="C"><code class="language-C">sensorRead&#x3D; analogRead(PIN);&#x2F;&#x2F; 数据信号转模拟信号newdata&#x3D;map(sensorRead,0,1023,0,100);&#x2F;&#x2F;数据映射  0~1023是sensorRead的值，0~100是映射的值     1023-&gt;100analogWrite(PIN,newdata);  &#x2F;&#x2F;PWM<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="引用同目录头文件"><a href="#引用同目录头文件" class="headerlink" title="引用同目录头文件"></a>引用同目录头文件</h2><pre class="line-numbers language-C" data-language="C"><code class="language-C">#include &quot;...&quot;   &#x2F;&#x2F;相比与#include &lt;...&gt;  ，&lt;&gt;里面引用的头文件是Arduino根目录下的libraries里的头文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="伺服电机"><a href="#伺服电机" class="headerlink" title="伺服电机"></a>伺服电机</h1><blockquote><p>棕色线GND   橘色信号线    红色VCC</p></blockquote><blockquote><p>需要包含头文件  Servo.h</p></blockquote><pre class="line-numbers language-C" data-language="C"><code class="language-C">#include &lt;Servo.h&gt;Servo myservo  &#x2F;&#x2F;定义电机的名字（结构体）myervo.attach(PIN); &#x2F;&#x2F;定义控制电机的引脚(信号线)myservo.write(90);   &#x2F;&#x2F;电机转动90度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h1 id="74HC595"><a href="#74HC595" class="headerlink" title="74HC595"></a>74HC595</h1><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>引脚扩展   3个引脚扩展成8个</p><h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><p><img src="/posts/1022efac/20210705230129.png" alt="20210705230129" loading="lazy"></p><h2 id="每个引脚功能"><a href="#每个引脚功能" class="headerlink" title="每个引脚功能"></a>每个引脚功能</h2><p>“资料”引脚DS： 编写引脚数据</p><p>“活塞”引脚SH：传输每个引脚的数据</p><p>“大平台”引脚ST：控制数据上传到每个引脚</p><h2 id="编码顺序"><a href="#编码顺序" class="headerlink" title="编码顺序"></a>编码顺序</h2><pre class="line-numbers language-C" data-language="C"><code class="language-C">&#x2F;&#x2F;定义3个“资料PIN1”“活塞PIN2”“大平台PIN3”引脚为输出pinMode(PIN1, OUTPUT)   &#x2F;&#x2F;定义输出引脚pinMode(PIN2, OUTPUT)   &#x2F;&#x2F;定义输出引脚pinMode(PIN3, OUTPUT)   &#x2F;&#x2F;定义输出引脚unsigned char data[8]&#x3D;&#123;1,1,1,1,1,1,1,1&#125;;digitalWrite(PIN3，LOW);   &#x2F;&#x2F;将“大平台”设置为低，准备接收数据for(int i&#x3D;0;i&lt;8;i++)&#123;digitalWrite(PIN2,LOW);     &#x2F;&#x2F;收起“活塞” 设置为低，准备传输 数据digitalWrite(PIN1,data[i]);&#x2F;&#x2F;传入数据        digitalWrite(PIN2,HIGH);     &#x2F;&#x2F;推动“活塞” 设置为高，传输数据        if(i&#x3D;&#x3D;8) digitalWrite(PIN3，HIGH);   &#x2F;&#x2F;将“大平台”设置为高，接收数据&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="步进电机"><a href="#步进电机" class="headerlink" title="步进电机"></a>步进电机</h1><blockquote><p>采用模块：ULN2003A       那边高电平，对称的位置的接地</p></blockquote><p><img src="/posts/1022efac/20210705232736.png" alt="20210705232736" loading="lazy"></p><h2 id="步进电机内部结构"><a href="#步进电机内部结构" class="headerlink" title="步进电机内部结构"></a>步进电机内部结构</h2><p><img src="/posts/1022efac/20210705233302.png" alt="20210705233302" loading="lazy"></p><blockquote><p>启动方法：四根线循环接地</p></blockquote><h1 id="8-8LED"><a href="#8-8LED" class="headerlink" title="8*8LED"></a>8*8LED</h1><blockquote><p>点亮一个灯：L4高电平，C1低电平</p></blockquote><p><img src="/posts/1022efac/20210705234420.png" alt="20210705234420" loading="lazy"></p><h1 id="红外模块"><a href="#红外模块" class="headerlink" title="红外模块"></a>红外模块</h1><blockquote><p><a href="https://github.com/Arduino-IRremote/Arduino-IRremote">https://github.com/Arduino-IRremote/Arduino-IRremote</a></p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;IRremote.h></span><span class="token comment">//包含头文件</span></span>IRrecv <span class="token function">irrecv</span><span class="token punctuation">(</span>PIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置红外接收引脚</span>decode_results results<span class="token punctuation">;</span><span class="token comment">//接收红外信号值</span>irrecv<span class="token punctuation">.</span><span class="token function">enaleIRIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//开启红外接收</span><span class="token keyword">if</span><span class="token punctuation">(</span>irrecv<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>results<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//判断是否接收到红外信号</span><span class="token punctuation">&#123;</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>results<span class="token punctuation">.</span>value<span class="token punctuation">,</span>HEX<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将接收数据results.value以16进制输出</span>    irrecv<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//继续接收</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="ATtiny85"><a href="#ATtiny85" class="headerlink" title="ATtiny85"></a>ATtiny85</h1><h2 id="结构-1"><a href="#结构-1" class="headerlink" title="结构"></a>结构</h2><p><img src="/posts/1022efac/20210706153839.png" alt="20210706153839" loading="lazy"></p><blockquote><p>需要Arduino作为烧录器烧录</p><p>例程选择ArduinoISP,烧录到Arduino</p><p>工具里烧录器改成Arduino as ISP，开发板选择ATtiny85</p><p>接线：将Reset，Pin2，Pin1，Pin0接入Arduino</p></blockquote><blockquote><p><a href="https://raw.githubusercontent.com/damellis/attiny/ide-1.6.x-boards-manager/package_damellis_attiny_index.json">https://raw.githubusercontent.com/damellis/attiny/ide-1.6.x-boards-manager/package_damellis_attiny_index.json</a></p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token function">analogWrite</span><span class="token punctuation">(</span>PIN<span class="token punctuation">,</span>value<span class="token punctuation">)</span>；<span class="token comment">//PWM控制灯亮度</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="ws2812b"><a href="#ws2812b" class="headerlink" title="ws2812b"></a>ws2812b</h1><pre class="line-numbers language-C" data-language="C"><code class="language-C">#include &lt;Adafruit_NeoPixel.h&gt;Adafruit_NeoPixel strip(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800); &#x2F;&#x2F;定义灯的参数strip.begin();&#x2F;&#x2F;初始化strip.show();    &#x2F;&#x2F;每次setPixelColor设置完，都要执行这个程序&#x2F;&#x2F;设置颜色方法1strip.setPixelColor(n, red, green, blue, white);&#x2F;&#x2F;n:位置，white:亮度0~255strip.show();&#x2F;&#x2F;设置颜色方法2uint32_t magenta &#x3D; strip.Color(red, green, blue);  &#x2F;&#x2F;RGB颜色转换strip.setPixelColor(n,magenta);strip.show();&#x2F;&#x2F;使用getPixelColor()方法可以查询某像素的颜色。uint32_t color &#x3D; strip.getPixelColor(11);&#x2F;&#x2F;该方法返回32位颜色值。uint16_t n &#x3D; strip.numPixels();&#x2F;&#x2F;获取LED数量&#x2F;&#x2F;设置整体亮度,setBrightness()一般只在setup()中调用strip.setBrightness(64);&#x2F;&#x2F;彩带中LED的整体亮度可以用setBrightness()进行调整，该方法只需一个参数，0为关闭，255为最大亮度。 例如，将彩带设置为1&#x2F;4亮度：strip.show();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近粗错的学习了Arduino的使用ヾ(≧▽≦*)o&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="http://xiaoluostudy.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Arduino" scheme="http://xiaoluostudy.top/tags/Arduino/"/>
    
    <category term="制作" scheme="http://xiaoluostudy.top/tags/%E5%88%B6%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>网站的由来（制作）</title>
    <link href="http://xiaoluostudy.top/posts/31e5cf3f.html"/>
    <id>http://xiaoluostudy.top/posts/31e5cf3f.html</id>
    <published>2021-06-24T15:20:01.000Z</published>
    <updated>2022-06-15T17:41:20.001Z</updated>
    
    <content type="html"><![CDATA[<p>本章作为本网站的第一篇文章，就来说说它的诞生过程吧<br>d&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;(￣▽￣*)b</p><span id="more"></span><h1 id="网站制作准备"><a href="#网站制作准备" class="headerlink" title="网站制作准备"></a>网站制作准备</h1><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><blockquote><p>Git：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p><p>nodejs：<a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a> <strong>下载稳定版STL就行</strong></p></blockquote><p>安装的时候记得把路径改一下，除非你是C盘战士。</p><p>打开<code>Git</code>用<code>cd</code>指令定位到你想放网站的位置</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> f:/Blog/myblog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在框内输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="检查版本"><a href="#检查版本" class="headerlink" title="检查版本"></a>检查版本</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo -v  <span class="token function">node</span> -v<span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h2><pre class="line-numbers language-none"><code class="language-none">hexo init myblog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>myblog是网站文件的名字</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> myblog<span class="token function">npm</span> <span class="token function">install</span><span class="token function">npm</span> <span class="token function">install</span> hexo-render-pug 不装有些主题无法使用hexo ghexo server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样你的网站框架就搭好了,浏览器输入<code>localhost:4000</code>查看</p><p>关闭网站按<code>CTRL+C</code></p><hr><h1 id="网站托管"><a href="#网站托管" class="headerlink" title="网站托管"></a>网站托管</h1><blockquote><p>网站托管可以在Coding、Github、Gitee或者购买虚拟机</p><p>下面我将一一介绍(本文不介绍虚拟机)</p></blockquote><h2 id="Coding网站托管"><a href="#Coding网站托管" class="headerlink" title="Coding网站托管"></a>Coding网站托管</h2><blockquote><p>网址：<a href="https://coding.net/">https://coding.net/</a></p><p>优势：国内，访问速度快</p><p>劣势：免费使用6个月</p></blockquote><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629193905.png" alt="20210629193905" loading="lazy"></p><h3 id="添加ssh公钥"><a href="#添加ssh公钥" class="headerlink" title="添加ssh公钥"></a>添加ssh公钥</h3><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629194130.png" alt="20210629194130" loading="lazy"></p><h3 id="检查是否连接成功"><a href="#检查是否连接成功" class="headerlink" title="检查是否连接成功"></a>检查是否连接成功</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ssh</span> -T git@e.coding.net<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629194252.png" alt="20210629194252" loading="lazy"></p><h3 id="选择网站托管服务"><a href="#选择网站托管服务" class="headerlink" title="选择网站托管服务"></a>选择网站托管服务</h3><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629194407.png" alt="20210629194407" loading="lazy"></p><blockquote><p>但此时项目中还没有文件，需要上传文件上去，上传方面可以直接跳到 <a href="#jump">网站文件上传</a></p></blockquote><hr><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><blockquote><p>进入<a href="https://github.com/">https://github.com/</a>  注册<code>Github</code>账号</p><p>优势：免费</p><p>劣势：因为是<code>国外</code>的网站，会有进入不了你自己的网站的可能，而且<code>加载</code>相比另外两种会<code>慢</code>些</p></blockquote><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629165424.png" alt="20210629165424" loading="lazy"></p><blockquote><p>库名按下面的图来，<code>你的名字.github.io</code></p></blockquote><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629165656.png" alt="20210629165656" loading="lazy"></p><h3 id="Git连接Github账户"><a href="#Git连接Github账户" class="headerlink" title="Git连接Github账户"></a>Git连接Github账户</h3><blockquote><p>输入命令</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global user.name 你的名字"<span class="token function">git</span> config --global user.email 你的邮箱<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>邮箱和名字是你Github的</strong></p><h3 id="获取ssh（后面有用）"><a href="#获取ssh（后面有用）" class="headerlink" title="获取ssh（后面有用）"></a>获取ssh（后面有用）</h3><blockquote><p>打开Git窗口后输入下面的命令，然后一直回车</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa或者ssh-keygen -t rsa -f id_rsa.github -C <span class="token string">"注册GitHub的邮箱"</span>或者ssh-keygen -t rsa -f id_rsa.gitee -C <span class="token string">"注册Gitee的邮箱"</span><span class="token number">3</span>个选一个就好,输入多了会被覆盖<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>打开资源管理器进入<code>C:\Users\你电脑的用户名\.ssh</code>，找到<code>id_rsa.pub</code>文件右键打开方式，然后选择记事本打开，复制里面的内容(这个要保密的哦)</p></blockquote><blockquote><p>进入<code>Github</code>账户设置</p></blockquote><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629170559.png" alt="20210629170559" loading="lazy"></p><blockquote><p>点击SSH and GPG kyes，粘贴刚刚复制的内容</p></blockquote><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629170806.png" alt="20210629170806" loading="lazy"></p><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629170959.png" alt="20210629170959" loading="lazy"></p><blockquote><p>打开Git 输入<strong>ssh -T <a href="mailto:&#103;&#105;&#116;&#64;&#103;&#105;&#x74;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#109;">&#103;&#105;&#116;&#64;&#103;&#105;&#x74;&#x68;&#x75;&#x62;&#46;&#x63;&#x6f;&#109;</a></strong>  ，出现下面的提示就是成功连接到GitHub</p></blockquote><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629171325.png" alt="20210629171325" loading="lazy"></p><blockquote><p>打开Github的Page服务</p></blockquote><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629192805.png" alt="20210629192805" loading="lazy"></p><p>出现波浪线那条就行,Github的网站托管就配置好了,网址就显示在画波浪线那了</p><hr><h2 id="Gitee网站托管暂时无法使用-以后能用了再补充"><a href="#Gitee网站托管暂时无法使用-以后能用了再补充" class="headerlink" title="Gitee网站托管暂时无法使用(以后能用了再补充)"></a>Gitee网站托管暂时无法使用(以后能用了再补充)</h2><blockquote><p>网址：<a href="https://gitee.com/">https://gitee.com/</a></p><p>优势：国内，访问速度快</p></blockquote><hr><h1 id="网站文件上传"><a href="#网站文件上传" class="headerlink" title="网站文件上传"></a><span id="jump">网站文件上传</span></h1><blockquote><p>首先要进入博客文件的<code>根目录</code>，打开<code>_config.yml</code>在末尾加上这一串代码，我把3种网站托管方式都写在下面了，注意首行缩进要对齐，照猫画虎的改一下吧</p></blockquote><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//e.coding.net/joemax01/xiaoluostudy/xiaoluostudy.git<span class="token comment">#  repo: https://github.com/joemax01/joemax01.github.io.git</span><span class="token comment">#  repo: https://gitee.com/JoeMax/JoeMax.Gitee.io.git</span>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>之后用Git进入博客的根目录(如何进入文章开头有说明)，按顺序输入</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo cleanhexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>过一会就可以用网站访问看效果了</p></blockquote><hr><h1 id="自定义自己的博客"><a href="#自定义自己的博客" class="headerlink" title="自定义自己的博客"></a>自定义自己的博客</h1><h2 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h2><blockquote><p>进入<a href="https://hexo.io/themes/">https://hexo.io/themes/</a>   寻找自己心仪的网站模板或者其他地方的hexo模板也行</p><p>将文件放到”博客根目录\themes”里</p><p>在根目录里的<code>_config.yml</code>的<code>theme</code>写上刚刚那个网站模板文件夹的名称</p></blockquote><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629204754.png" alt="20210629204754" loading="lazy"></p><blockquote><p>用hexo server在本地先看看效果吧</p><p>可以缩写成hexo s</p></blockquote><hr><h2 id="创作自己的CDN图标"><a href="#创作自己的CDN图标" class="headerlink" title="创作自己的CDN图标"></a>创作自己的CDN图标</h2><blockquote><p>首先进入 <a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a> 创建自己的图标库</p></blockquote><p>在资源管理-我的项目  新建项目并上传自己想要的图标</p><p><img src="/posts/31e5cf3f/my-first-paper%5C20210712225458.png" alt="20210712225458" loading="lazy"></p><p>点开Symbol复制<code>.js</code>的链接到主题配置文件里</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment">#图标</span><span class="token key atrule">head</span><span class="token punctuation">:</span>  <span class="token key atrule">css</span><span class="token punctuation">:</span>  <span class="token key atrule">js</span><span class="token punctuation">:</span>    <span class="token key atrule">base</span><span class="token punctuation">:</span>    <span class="token key atrule">async</span><span class="token punctuation">:</span>      <span class="token key atrule">iconfont</span><span class="token punctuation">:</span> //at.alicdn.com/t/font_2641442_dg8b6ohd9el.js    defer<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后在主题配置文件里就可以调用这个图标了</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> albums  <span class="token key atrule">path</span><span class="token punctuation">:</span> /albums/  <span class="token key atrule">icon</span><span class="token punctuation">:</span> icon<span class="token punctuation">-</span>gallery<span class="token punctuation">-</span>line<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="域名申请-让域名好看又好记"><a href="#域名申请-让域名好看又好记" class="headerlink" title="域名申请(让域名好看又好记)"></a>域名申请(让域名好看又好记)</h1><blockquote><p>这里演示的是腾讯云购买域名（因为coding被腾讯收购了，这样操作会快些）</p><p>搜索框输入”域名”，点击域名注册</p></blockquote><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629202852.png" alt="20210629202852" loading="lazy"></p><blockquote><p>输入你想要的域名购买就行了，top比较便宜可以考虑</p></blockquote><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629203008.png" alt="20210629203008" loading="lazy"></p><blockquote><p>这时候打开Coding项目的网站托管里,点击自定义域名，然后新建域名,输入之前买的域名</p></blockquote><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629203518.png" alt="20210629203518" loading="lazy"></p><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629203713.png" alt="20210629203713" loading="lazy"></p><blockquote><p>按上面显示的，进入<a href="https://console.cloud.tencent.com/cns">https://console.cloud.tencent.com/cns</a>  进行解析</p></blockquote><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629203255.png" alt="20210629203255" loading="lazy"></p><blockquote><p>添加记录，之后跳回Coding那个界面，点击<code>我已添加</code> 完成！</p></blockquote><p><img src="/posts/31e5cf3f/my-first-paper%5C20210629203915.png" alt="20210629203915" loading="lazy"></p><h1 id="某些可能遇到的问题"><a href="#某些可能遇到的问题" class="headerlink" title="某些可能遇到的问题"></a>某些可能遇到的问题</h1><h2 id="无法上传无法上传"><a href="#无法上传无法上传" class="headerlink" title="无法上传无法上传"></a>无法上传无法上传</h2><p>ERROR Deployer not found: git</p><blockquote><p>原因:没有安装deployer</p></blockquote><blockquote><p>解决:在Git下输入这个指令</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save hexo-deployer-git <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="无法上传本地图片"><a href="#无法上传本地图片" class="headerlink" title="无法上传本地图片"></a>无法上传本地图片</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-asset-image<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>设置同名文件夹在文章那个文件夹里</p><p>比如我的文章文件名my-first-paper，那就在这文件夹里创建一个my-first-paper文件夹，里面放图片，引用如下面所示</p><pre class="line-numbers language-none"><code class="language-none">![20210629203713](my-first-paper\20210629203713.png)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font size="44"><strong>持续更新~</strong></font></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;本章作为本网站的第一篇文章，就来说说它的诞生过程吧&lt;br&gt;d&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;&amp;#x3D;(￣▽￣*)b&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="http://xiaoluostudy.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="制作" scheme="http://xiaoluostudy.top/tags/%E5%88%B6%E4%BD%9C/"/>
    
    <category term="网站" scheme="http://xiaoluostudy.top/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
</feed>
